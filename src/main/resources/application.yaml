spring:
  application:
    name: aerotool-application
  datasource:
    url: jdbc:postgresql://localhost:5432/aerotool
    username: aerotool-app
    password: aerotool-app
    driver-class-name: org.postgresql.Driver
    jpa:
      hibernate:
        ddl-auto: update
      properties:
        hibernate:
          dialetc: org.hibernate.dialect.PostgreSQLDialect
          format_sql: true

queries:
  sql:
    user-dao:
      insert:
        user: >
            INSERT INTO aerotool_platform.user(id, name, role, promptuary_login) VALUES (?, ?, ?::aerotool_platform.user_role, ?)
      select:
        user-and-login-and-password-from-promptuary-by-promptuary-login: >
          SELECT u.id, u.name, u.role, p.login, p.password FROM aerotool_platform.user u INNER JOIN aerotool_platform.promptuary p ON u.promptuary_login = p.login WHERE u.promptuary_login= ?
        user-by-id:
            SELECT * FROM aerotool_platform.user WHERE id=?
        user-by-name:
            SELECT * FROM aerotool_platform.user WHERE LIKE '%' || ? || '%' OR name LIKE '%' || ? || '%';
        user-all: >
          SELECT * FROM aerotool_platform.user
      update:
        user-name: >
          UPDATE aerotool_platform.user SET name=? WHERE id=?
      delete:
        user-by-promptuary:
          DELETE FROM aerotool_platform.user WHERE promptuary_login=?
    request-dao:
      insert:
        request: >
            INSERT INTO aerotool_platform.request(id, request_date, user_id) VALUES (?, ?, ?)
      select:
        request-by-id: >
            SELECT * FROM aerotool_platform.request WHERE id=?
        request-all: >
            SELECT * FROM aerotool_platform.request
      delete:
        request-by-id: >
            DELETE FROM aerotool_platform.request WHERE id=?
    line-request-dao:
      insert:
        line-request: >
            INSERT INTO aerotool_platform.line_request(id, expected_return_date, real_return_date, expected_withdrawal_date, real_withdrawal_date, request_situation, tool_item_id, request_id) VALUES (?, ?, ?, ?, ?, ?::aerotool_platform.request_situation, ?, ?)
      select:
        line-request-by-id:
            SELECT * FROM aerotool_platform.line_request WHERE id=?
        line-request-all:
            SELECT * FROM aerotool_platform.line_request
        line-request-by-request-id:
            SELECT * FROM aerotool_platform.line_request WHERE request_id=?
      update:
        line-request-situation:
            UPDATE aerotool_platform.line_request SET request_situation=?::aerotool_platform.request_situation WHERE id=?
      delete:
        line-request:
            DELETE FROM aerotool_platform.line_request WHERE id=?
    locate-dao:
      insert:
        locate: >
          INSERT INTO aerotool_platform.locate(id, name, description) VALUES (?, ?, ?)
      select:
        find-all: >
          SELECT * FROM aerotool_platform.locate
        find-by-id: >
          SELECT * FROM aerotool_platform.locate WHERE id=?
    tool-dao:
      insert:
        tool: >
            INSERT INTO aerotool_platform.tool(id, name, description, type) VALUES (?, ?, ?, ?::aerotool_platform.tool_type)
      update:
        tool: >
            UPDATE aerotool_platform.tool SET name=?, description=?, type=?::aerotool_platform.tool_type WHERE id=?
      select:
        tool-by-id: >
          SELECT * FROM aerotool_platform.tool WHERE id=?
        tool-all: >
          SELECT * FROM aerotool_platform.tool
      delete:
        tool-by-id: >
          DELETE FROM aerotool_platform.tool WHERE id=?
    tool-item-dao:
        insert:
            tool-item: >
                INSERT INTO aerotool_platform.tool_item(id, patrimony, situation, locate_id, tool_id) VALUES (?, ?, ?::aerotool_platform.tool_situation, ?, ?)
        update:
            tool-item: >
                UPDATE aerotool_platform.tool_item SET patrimony=?, situation=?::aerotool_platform.tool_situation, locate_id=?, tool_id=? WHERE id=?
        select:
            tool-item-by-id: >
                SELECT * FROM aerotool_platform.tool_item WHERE id=?
            tool-item-all: >
                SELECT * FROM aerotool_platform.tool_item
        delete:
            tool-item-by-id: >
                DELETE FROM aerotool_platform.tool_item WHERE id=?
    event-dao:
        insert:
            event: >
                INSERT INTO aerotool_platform.event(id, description, event_date, event_type, event_situation, user_responsible_id, user_subject_id) VALUES (?, ?, ?, ?, ?, ?, ?)
        select:
            event-by-id: >
                SELECT * FROM aerotool_platform.event WHERE id=?
            event-all: >
                SELECT * FROM aerotool_platform.event
            event-by-responsible-id: >
                SELECT * FROM aerotool_platform.event WHERE user_responsible_id=?
            event-by-subject-id: >
                SELECT * FROM aerotool_platform.event WHERE user_subject_id=?
        update:
          event-situation: >
            UPDATE aerotool_platform.event SET event_situation = ?::aerotool_platform.event_situation WHERE id=?
        delete:
            event-by-id: >
                DELETE FROM aerotool_platform.event WHERE id=?
